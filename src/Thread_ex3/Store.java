package Thread_ex3;

public class Store {
    private int breadCount; // S·ªë b√°nh m√¨ hi·ªán c√≥
    private final int capacity; // S·ªë b√°nh m√¨ t·ªëi ƒëa

    public Store(int capacity) {
        this.capacity = capacity;
        this.breadCount = capacity; // B·∫Øt ƒë·∫ßu v·ªõi c·ª≠a h√†ng ƒë·∫ßy b√°nh m√¨
    }

    // Nh√† s·∫£n xu·∫•t cung c·∫•p b√°nh m√¨
    public synchronized void addBread() {
        while (breadCount >= capacity) {
            try {
                System.out.println("‚ö†Ô∏è C·ª≠a h√†ng ƒë·∫ßy, nh√† s·∫£n xu·∫•t ch·ªù...");
                wait(); // Ch·ªù ƒë·∫øn khi c√≥ ch·ªó tr·ªëng
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        breadCount++; // Th√™m b√°nh m√¨
        System.out.println("‚úÖ Nh√† s·∫£n xu·∫•t cung c·∫•p b√°nh m√¨. T·ªïng: " + breadCount);
        notifyAll(); // B√°o cho ng∆∞·ªùi mua bi·∫øt c√≥ b√°nh m√¨
    }

    // Ng∆∞·ªùi mua mua b√°nh m√¨
    public synchronized void buyBread(String buyerName) {
        while (breadCount == 0) {
            try {
                System.out.println("‚ùå " + buyerName + " ch·ªù v√¨ c·ª≠a h√†ng h·∫øt b√°nh...");
                wait(); // Ch·ªù ƒë·∫øn khi c√≥ b√°nh m√¨
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        breadCount--; // Gi·∫£m b√°nh m√¨
        System.out.println("üõí " + buyerName + " mua 1 b√°nh m√¨. C√≤n l·∫°i: " + breadCount);
        notifyAll(); // B√°o cho nh√† s·∫£n xu·∫•t c√≥ th·ªÉ l√†m th√™m
    }
}
